:where(button, a, .link-placeholder) {
    > :where(img, svg) {
        &:first-child {
            @extend %image-icon;
        }
    }
}

.link-placeholder.disabled {
    opacity: #{$btn-disabled-opacity};
}

.toolbar {
    display: flex;
    gap: map-get($spacers, 2);
}

.btn {
    $background: map-get($theme-colors, secondary);
    $color: color-contrast($background);
    --#{$prefix}btn-active-border-color: transparent;
    --#{$prefix}btn-disabled-border-color: transparent;
    --#{$prefix}btn-focus-shadow-rgb: #{to-rgb(mix($color, $background, 15%))};

    &[data-anchor-active] {
        --#{$prefix}btn-bg: var(--#{$prefix}btn-active-bg);
    }
}

.btn-plain,
.toolbar > :is(button, .btn:is(a, span)) {
    --#{$prefix}btn-color: inherit;
    --#{$prefix}btn-border-width: 0;
    --#{$prefix}btn-active-bg: rgba(0, 0, 0, .3);
    --#{$prefix}btn-hover-bg: rgba(0, 0, 0, .2);
}

.btn-round,
.toolbar-compact > :is(button, .btn:is(a, span)) {
    --#{$prefix}btn-border-radius: 50%;
    --#{$prefix}btn-line-height: 0;
    --#{$prefix}btn-padding-y: var(--#{$prefix}btn-padding-x);
}

.btn-stack {
    --#{$prefix}btn-padding-x: 0;
    --#{$prefix}btn-padding-y: 0;
    --#{$prefix}btn-color: inherit;
    --#{$prefix}btn-border-width: 0;
    @extend %grid-stack;
    overflow: clip;

    > :first-child {
        margin: initial;
    }

    > .hover-show {
        opacity: 0;
    }

    &:is(:hover, :focus-visible) {
        > .hover-show {
            opacity: 1;
        }

        > .hover-hide {
            opacity: 0;
        }
    }
}

$fab-font-size: var(--#{$prefix}fab-font-size, calc(2rem + 1.5vw));
$fab-margin-x: var(--#{$prefix}fab-margin-x, map-get($spacers, 3));
$fab-margin-y: var(--#{$prefix}fab-margin-y, map-get($spacers, 3));
$fab-shadow-offset: var(--#{$prefix}fab-shadow-offset, 2px);
$fab-shadow-radius: var(--#{$prefix}fab-shadow-radius, 10px);
$fab-shadow-expand: var(--#{$prefix}fab-shadow-expand, 0px);
$fab-shadow-color: var(--#{$prefix}fab-shadow-color, rgb(0 0 0 / 0.5));

@mixin btn-fab {
    font-size: $fab-font-size;
    z-index: $zindex-dropdown;
    isolation: isolate;
    right: 0;
    bottom: 0;
    margin: $fab-margin-y $fab-margin-x;
    box-shadow: $fab-shadow-offset $fab-shadow-offset $fab-shadow-radius $fab-shadow-expand $fab-shadow-color;

    &-start {
        left: 0;
        right: initial;
    }

    &-fixed {
        position: fixed;
    }

    &-small {
        --#{$prefix}fab-font-size: calc(0.5rem + 1.5vw);
    }
}

$fab-breakpoints: null, sm, md, lg !default;

@each $value in $fab-breakpoints {
    @if($value ==null) {
        .btn-fab {
            @include btn-fab;
        }
    }

    @else {
        @include media-breakpoint-down($value) {
            .btn-#{$value}-fab {
                @include btn-fab;
            }

            .pb-#{$value}-fab {
                /* dynamic bottom padding which is suitable enough 
                to avoid content overlapping with standard size FAB */
                padding-bottom: calc(#{$fab-font-size} + 2*#{$fab-margin-y});
            }
        }
    }
}