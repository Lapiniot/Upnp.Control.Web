.btn {
    --#{$prefix}btn-bg-img: none;
    --#{$prefix}btn-hover-color: var(--#{$prefix}primary);
    --#{$prefix}btn-hover-bg-img: var(--#{$prefix}hover-layer-cc);
    --#{$prefix}btn-active-color: var(--#{$prefix}primary);
    --#{$prefix}btn-active-bg-img: var(--#{$prefix}focus-layer-cc);
    --#{$prefix}btn-active-border-color: transparent;
    --#{$prefix}btn-focus-bg-img: var(--#{$prefix}focus-layer-cc);
    --#{$prefix}btn-disabled-color: rgba(var(--#{$prefix}on-surface-rgb), #{$disabled-state-opacity});
    --#{$prefix}btn-disabled-border-color: transparent;
    @include gradient-bg-img(var(--#{$prefix}btn-bg-img));
    box-shadow: var(--#{$prefix}btn-box-shadow);
    white-space: nowrap; // prevent content wrapping on overflow as it is prohibited by MUI3

    &:hover {
        @include gradient-bg-img(var(--#{$prefix}btn-hover-bg-img));
        box-shadow: var(--#{$prefix}btn-hover-box-shadow, var(--#{$prefix}btn-box-shadow));
    }

    &:focus-visible {
        @include gradient-bg-img(var(--#{$prefix}btn-focus-bg-img));
        outline: var(--#{$prefix}focus-ring);
        outline-offset: #{$focus-ring-offset};
        box-shadow: var(--#{$prefix}btn-focus-box-shadow, var(--#{$prefix}btn-box-shadow));
    }

    &:is(:active, .active, [data-anchor-active]) {
        @include gradient-bg-img(var(--#{$prefix}btn-active-bg-img));
    }

    &:active {
        box-shadow: var(--#{$prefix}btn-active-box-shadow, var(--#{$prefix}btn-box-shadow));
    }

    &:disabled {
        box-shadow: var(--#{$prefix}btn-disabled-box-shadow, var(--#{$prefix}btn-box-shadow));
    }
}

// All, but toolbar, btn-icon and btn-stack, buttons will have fixed 18px size, 
// proper vertical align and inline margins (to match MUI3 guidelines).
//.btn:not(:where(.btn-icon, .btn-stack)) > :is(svg, img):first-child,
:not(.toolbar) > .btn:not(.btn-icon):not(.btn-stack) > :is(svg, img):first-child {
    font-size: 18px;
    vertical-align: sub;
    margin-inline: -#{map-get($spacers, 2)} #{map-get($spacers, 2)};
}

.btn-icon,
.toolbar .btn {
    --#{$prefix}btn-padding-x: #{map-get($spacers, 2)};
    --#{$prefix}btn-padding-y: #{map-get($spacers, 2)};
    --#{$prefix}btn-border-radius: 50%;
    --#{$prefix}btn-line-height: 0;
    --#{$prefix}btn-color: var(--#{$prefix}on-surface-variant);
    --#{$prefix}btn-hover-color: var(--#{$prefix}on-surface-variant);
    --#{$prefix}btn-active-color: var(--#{$prefix}on-surface-variant);
    height: fit-content; // allow to scale-up proportionally to icon size and fixed paddings
    aspect-ratio: 1;
    font-size: 24px;
}

.btn-elevate {
    --#{$prefix}btn-color: var(--#{$prefix}primary);
    --#{$prefix}btn-bg: var(--#{$prefix}surface-cntr-low);
    --#{$prefix}btn-hover-color: var(--#{$prefix}primary);
    --#{$prefix}btn-hover-bg: var(--#{$prefix}surface-cntr-low);
    --#{$prefix}btn-active-color: var(--#{$prefix}primary);
    --#{$prefix}btn-active-bg: var(--#{$prefix}surface-cntr-low);
    --#{$prefix}btn-disabled-bg: rgba(var(--#{$prefix}on-surface-rgb), .12);
    --#{$prefix}btn-box-shadow: var(--#{$prefix}shadow-l1);
    --#{$prefix}btn-hover-box-shadow: var(--#{$prefix}shadow-l2);
    --#{$prefix}btn-disabled-box-shadow: none;
}

.btn-fill {
    --#{$prefix}btn-color: var(--#{$prefix}on-primary);
    --#{$prefix}btn-bg: var(--#{$prefix}primary);
    --#{$prefix}btn-hover-color: var(--#{$prefix}on-primary);
    --#{$prefix}btn-hover-bg: var(--#{$prefix}primary);
    --#{$prefix}btn-active-color: var(--#{$prefix}on-primary);
    --#{$prefix}btn-active-bg: var(--#{$prefix}primary);
    --#{$prefix}btn-disabled-color: rgba(var(--#{$prefix}on-primary-rgb), #{$disabled-state-opacity});
    --#{$prefix}btn-disabled-bg: rgba(var(--#{$prefix}on-surface-rgb), .12);
}

.btn-tone {
    --#{$prefix}btn-color: var(--#{$prefix}on-secondary-cntr);
    --#{$prefix}btn-bg: var(--#{$prefix}secondary-cntr);
    --#{$prefix}btn-hover-color: var(--#{$prefix}on-secondary-cntr);
    --#{$prefix}btn-hover-bg: var(--#{$prefix}secondary-cntr);
    --#{$prefix}btn-active-color: var(--#{$prefix}on-secondary-cntr);
    --#{$prefix}btn-active-bg: var(--#{$prefix}secondary-cntr);
    --#{$prefix}btn-disabled-bg: rgba(var(--#{$prefix}on-surface-rgb), .12);
}

.btn-outline {
    --#{$prefix}btn-border-color: var(--#{$prefix}outline);
    --#{$prefix}btn-hover-border-color: var(--#{$prefix}outline);
    --#{$prefix}btn-active-border-color: var(--#{$prefix}outline);
    --#{$prefix}btn-disabled-border-color: rgba(var(--#{$prefix}on-surface-rgb), .12);
}

.toolbar {
    display: flex;
    gap: map-get($spacers, 2);
}

// Represent flat container button with a following behavior:
// 1. Child elements are stacked on top of each other
// 2. No decoration on the button itself
// 3. Button size is determined by the largest children size
// 4. Button is "shape clip ready" via setting proper overflow value and 
//    constraining sizes to the intrinsic content size to 
//    prevent shrinking in flex layouts
.btn-stack {
    --#{$prefix}btn-padding-x: 0;
    --#{$prefix}btn-padding-y: 0;
    --#{$prefix}btn-border-radius: 0;
    --#{$prefix}btn-border-width: 0;
    --#{$prefix}btn-color: inherit;
    overflow: clip;
    min-width: fit-content;
    min-height: fit-content;
    @extend %grid-stack;

    & > * {
        position: relative;
    }
}

$fab-font-size: var(--#{$prefix}fab-font-size, calc(2rem + 1.5vw));
$fab-margin-x: var(--#{$prefix}fab-margin-x, map-get($spacers, 3));
$fab-margin-y: var(--#{$prefix}fab-margin-y, map-get($spacers, 3));
$fab-shadow-offset: var(--#{$prefix}fab-shadow-offset, 2px);
$fab-shadow-radius: var(--#{$prefix}fab-shadow-radius, 10px);
$fab-shadow-expand: var(--#{$prefix}fab-shadow-expand, 0px);
$fab-shadow-color: var(--#{$prefix}fab-shadow-color, rgb(0 0 0 / 0.5));

@mixin btn-fab {
    font-size: $fab-font-size;
    z-index: $zindex-dropdown;
    isolation: isolate;
    right: 0;
    bottom: 0;
    margin: $fab-margin-y $fab-margin-x;
    box-shadow: $fab-shadow-offset $fab-shadow-offset $fab-shadow-radius $fab-shadow-expand $fab-shadow-color;

    &-start {
        left: 0;
        right: initial;
    }

    &-fixed {
        position: fixed;
    }

    &-small {
        --#{$prefix}fab-font-size: calc(0.5rem + 1.5vw);
    }
}

$fab-breakpoints: null, sm, md, lg !default;

@each $value in $fab-breakpoints {
    @if($value ==null) {
        .btn-fab {
            @include btn-fab;
        }
    }

    @else {
        @include media-breakpoint-down($value) {
            .btn-#{$value}-fab {
                @include btn-fab;
            }
        }
    }
}