$enable-gradients: false;
$enable-shadows: false;
$enable-rounded: true;
$enable-grid-classes: false;
$enable-container-classes: false;
$enable-rfs: true;

$brand: #6750A4;
$icon-scale: 1.25;
$missing-image-content: '';
$border-radius-sm: .1875rem;
$display-font-sizes: (
);

// Configuration
@import "bootstrap/scss/functions";
@import "colors";
@import "bootstrap/scss/variables";
@import "bootstrap/scss/variables-dark";
@import "maps";
@import "bootstrap/scss/maps";

@import "bootstrap/scss/mixins";
@import "bootstrap/scss/utilities";
@import "utilities";

$grid-breakpoints: map-remove($grid-breakpoints, xl, xxl);
$card-border-radius: $border-radius-sm;
$card-border-width: 0;
$card-cap-bg: null;
$card-bg: rgba(var(--#{$prefix}surface-cntr-low-rgb), 1);

$spoiler-border-radius: $border-radius-sm;
$btn-border-radius: $border-radius-sm;
$badge-border-radius: $border-radius-sm;
$toast-border-radius: $border-radius-sm;

$modal-content-bg: rgba(var(--#{$prefix}surface-cntr-high-rgb), 1);
$modal-content-border-radius: $border-radius-xl;
$modal-content-border-width: 0;

$dropdown-border-radius: $border-radius-sm;
$list-group-border-color: 0;
$list-group-border-width: 0;
$list-group-bg: null;

$breadcrumb-border-radius: 0;
$breadcrumb-divider: quote("\276f");
$breadcrumb-item-padding-x: map-get($spacers, 1);

$card-box-shadow: var(--switch-shadow, $box-shadow-sm);
$card-border-width: var(--switch-border, $card-border-width);
$card-border-radius: var(--switch-border-radius, $border-radius-xl);

$expand-button-icon: url("data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' fill='#{$body-color}' height='24' viewBox='0 -960 960 960' width='24'><path d='M480-345 240-585l56-56 184 184 184-184 56 56-240 240Z'/></svg>");
$expand-button-icon-dark: url("data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' fill='#{$body-color-dark}' height='24' viewBox='0 -960 960 960' width='24'><path d='M480-345 240-585l56-56 184 184 184-184 56 56-240 240Z'/></svg>");

@import "root";

:root,
[data-bs-theme="light"] {
    --#{$prefix}brand-color: #{shade-color($primary, 40%)};
    --#{$prefix}accent-color: #{$primary};
    --#{$prefix}accent-color-subtle: #{tint-color($primary, 40%)};
    --#{$prefix}accent-color-emphasis: #{shade-color($primary, 60%)};
    --#{$prefix}expand-button-icon: #{escape-svg($expand-button-icon)};
}

@include color-mode(dark) {
    --#{$prefix}brand-color: #{shade-color($primary, 80%)};
    --#{$prefix}accent-color: #{$primary};
    --#{$prefix}accent-color-subtle: #{shade-color($primary, 60%)};
    --#{$prefix}accent-color-emphasis: #{tint-color($primary, 40%)};
    --#{$prefix}expand-button-icon: #{escape-svg($expand-button-icon-dark)};
}

@import "bootstrap/scss/reboot";
@import "bootstrap/scss/type";
@import "bootstrap/scss/buttons";
@import "bootstrap/scss/button-group";
@import "bootstrap/scss/forms";
@import "bootstrap/scss/card";
@import "bootstrap/scss/breadcrumb";
@import "bootstrap/scss/badge";
@import "bootstrap/scss/toasts";

// Reset $theme-colors map to avoid generation of redundand .list-group-item-* color styles
$temp: $theme-colors;
$theme-colors: (
);
@import "bootstrap/scss/list-group";
// then restore value to original value
$theme-colors: $temp;

@import "bootstrap/scss/close";
@import "bootstrap/scss/placeholders";
@import "bootstrap/scss/dropdown";

// Helpers
@import "bootstrap/scss/helpers/stacks";
@import "bootstrap/scss/helpers/text-truncation";
@import "bootstrap/scss/helpers/visually-hidden";
@import "helpers/color-bg";

@import "mixins";
@import "text-utils";
@import "animations";
@import "layout-grid";
@import "layout-table";
@import "navbar";
@import "appshell";
@import "buttons";
@import "dropdown";
@import "spoiler";
@import "slider";
@import "player";
@import "browser";
@import "backdrop";
@import "icons";
@import "alert";
@import "dialog";

// Utilities
@import "bootstrap/scss/utilities/api";

/********** Specific site element styles **********/

::backdrop {
    --#{$prefix}backdrop-bg-color: rgba(0 0 0 / 0.5);
    --#{$prefix}backdrop-blur-radius: 0;
    --#{$prefix}backdrop-transition-duration: var(--#{$animation-prefix}duration-1);
}

::-webkit-file-upload-button {
    display: none;
}

.pb-6 {
    padding-bottom: #{$spacer * 5} !important;
}

.pb-7 {
    padding-bottom: #{$spacer * 7} !important;
}

%sticky {
    position: sticky;
    z-index: $zindex-sticky;
}

.sticky-top {
    @extend %sticky;
    top: 0;
}

.sticky-bottom {
    @extend %sticky;
    bottom: 0;
}

.container-inline {
    container-type: inline-size;
}

@include media-breakpoint-up(md) {
    .w-md-50 {
        width: 50% !important;
    }
}

:focus-visible {
    outline: none;
    box-shadow: 0 0 0 var(--#{$prefix}focus-ring-width) var(--#{$prefix}focus-ring-color);
}

a:not(.btn):focus-visible {
    border-radius: var(--#{$prefix}border-radius-sm);
}

.rounded-auto {
    border-radius: inherit !important;
}

input {
    accent-color: var(--#{$prefix}accent-color);
}

input[type="checkbox"] {
    inline-size: 1em;
    block-size: 1em;
    outline-offset: 5px;
    cursor: pointer;
}

.form-switch {
    input[type="checkbox"].form-check-input {
        font-size: 1.25em;
    }
}

.nt-host {
    display: flex;
    flex-flow: row-reverse wrap-reverse;
    gap: map-get($spacers, 3);
    margin: map-get($spacers, 3);
    inset: 0 0 auto 0;
    position: absolute;
    z-index: $zindex-fixed;
    max-height: 50vh;
    overflow: visible auto;
    scroll-snap-type: y proximity;
    container-type: inline-size;

    > * {
        scroll-snap-align: end;
        flex: 0 1 40ch;

        @container (inline-size <=576px) {
            flex: 100%;
        }
    }
}

@media (any-pointer: coarse) {
    .dropdown-item {
        padding-block: map-get($spacers, 3);
    }

    .browser-view > .table {
        --#{$prefix}table-cell-padding-y: #{1.2 * $table-cell-padding-y};
        touch-action: manipulation;

        .album-art {
            font-size: 3rem;
        }
    }
}