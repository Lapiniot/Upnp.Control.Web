/********** Grid Layout utilities **********/

$utilities: map-merge($utilities, ("col-span": (class: "col", property: "grid-column", values: (2: span 2))));

@mixin grid-auto-columns($min: 10rem, $max: 30rem, $mode: auto-fit) {
    grid: auto / repeat($mode, minmax(unquote("min(#{$min}, 100%)"), $max));
}

@mixin grid-scroll-snap($type: y proximity, $align: start, $stop: normal, $padding: null) {
    scroll-snap-type: $type;

    @if($padding) {
        scroll-padding: $padding;
    }

    > * {
        scroll-snap-align: $align;
        scroll-snap-stop: $stop;
    }
}

@mixin grid-responsive-auto($size: 34rem) {
    @include grid-auto-columns($max: $size);
    justify-content: space-evenly;
    align-content: start;
    align-items: start;
    padding: map-get($spacers, 3);
    overflow-y: auto;
    height: 100%;
    @include grid-scroll-snap($padding: map-get($spacers, 3) auto);

    > .card {
        @include box-shadow($box-shadow-sm);
        @include border-radius($card-border-radius);
    }

    > * {
        touch-action: pan-y;
    }
}

.d-grid {
    grid-gap: map-get($spacers, 3);
}

.grid-auto-1fr {
    grid-template-columns: auto 1fr;
}

.grid-1fr-auto {
    grid-template-columns: 1fr auto;
}

.grid-responsive-auto {
    @include grid-responsive-auto();
}

.grid-carousel {
    grid: 100% / auto-flow 100%;
    height: 100%;
    overflow-x: auto;
    overflow-y: hidden;
    overscroll-behavior-x: contain;
    @include grid-scroll-snap($type: x mandatory, $stop: always);

    > .card {
        @include border-radius(0);
    }

    > :only-child {
        touch-action: pan-y;
    }
}

.grid-responsive-auto-sm {
    @include media-breakpoint-up(sm) {
        @include grid-responsive-auto();
    }
}

.grid-auto-m15 {
    @include grid-auto-columns($min: 15rem, $max: 1fr, $mode: auto-fill);
}