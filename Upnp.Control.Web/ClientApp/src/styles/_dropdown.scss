$dropdown-bg: $surface-container-color;
$dropdown-color: $on-surface-color;
$dropdown-border-radius: $corner-xs;
$dropdown-inner-border-radius: $corner-xs;
$dropdown-border-width: 0;
$dropdown-border-color: transparent;
$dropdown-link-color: $on-surface-color;
$dropdown-link-hover-color: $on-surface-color;
$dropdown-link-hover-bg: transparent;
$dropdown-link-active-color: $on-surface-color;
$dropdown-link-active-bg: transparent;
$dropdown-link-disabled-color: rgba(var(--#{$prefix}on-surface-rgb), $disabled-state-opacity);
$dropdown-header-color: $dropdown-link-color;
$dropdown-divider-bg: $surface-variant-color;
$dropdown-box-shadow: var(--#{$prefix}shadow-l2);
$dropdown-item-padding-x: 12px;
$dropdown-divider-margin-y: 8px;
$dropdown-min-width: 15ch;
$dropdown-max-width: 30ch;

// The dropdown menu
.dropdown-menu {
    // scss-docs-start dropdown-css-vars
    --#{$prefix}dropdown-zindex: #{$zindex-dropdown};
    --#{$prefix}dropdown-min-width: #{$dropdown-min-width};
    --#{$prefix}dropdown-max-width: #{$dropdown-max-width};
    --#{$prefix}dropdown-padding-x: #{$dropdown-padding-x};
    --#{$prefix}dropdown-padding-y: #{$dropdown-padding-y};
    --#{$prefix}dropdown-spacer: #{$dropdown-spacer};
    @include rfs($dropdown-font-size, --#{$prefix}dropdown-font-size);
    --#{$prefix}dropdown-color: #{$dropdown-color};
    --#{$prefix}dropdown-bg: #{$dropdown-bg};
    --#{$prefix}dropdown-border-color: #{$dropdown-border-color};
    --#{$prefix}dropdown-border-radius: #{$dropdown-border-radius};
    --#{$prefix}dropdown-border-width: #{$dropdown-border-width};
    --#{$prefix}dropdown-inner-border-radius: #{$dropdown-inner-border-radius};
    --#{$prefix}dropdown-divider-bg: #{$dropdown-divider-bg};
    --#{$prefix}dropdown-divider-margin-x: 0;
    --#{$prefix}dropdown-divider-margin-y: #{$dropdown-divider-margin-y};
    --#{$prefix}dropdown-box-shadow: #{$dropdown-box-shadow};
    --#{$prefix}dropdown-link-color: #{$dropdown-link-color};
    --#{$prefix}dropdown-link-hover-color: #{$dropdown-link-hover-color};
    --#{$prefix}dropdown-link-hover-bg: #{$dropdown-link-hover-bg};
    --#{$prefix}dropdown-link-active-color: #{$dropdown-link-active-color};
    --#{$prefix}dropdown-link-active-bg: #{$dropdown-link-active-bg};
    --#{$prefix}dropdown-link-disabled-color: #{$dropdown-link-disabled-color};
    --#{$prefix}dropdown-item-padding-x: #{$dropdown-item-padding-x};
    --#{$prefix}dropdown-item-padding-y: #{$dropdown-item-padding-y};
    --#{$prefix}dropdown-header-color: #{$dropdown-header-color};
    --#{$prefix}dropdown-header-padding-x: #{$dropdown-header-padding-x};
    --#{$prefix}dropdown-header-padding-y: #{$dropdown-header-padding-y};
    --#{$prefix}dropdown-transition: none;
    --#{$prefix}dropdown-transition-duration: var(--#{$animation-prefix}duration-1);
    --#{$prefix}placement: auto;

    position: absolute;
    z-index: var(--#{$prefix}dropdown-zindex);
    display: none; // none by default, but block on "open" of the menu
    overflow: hidden auto;
    min-width: var(--#{$prefix}dropdown-min-width);
    max-width: var(--#{$prefix}dropdown-max-width);
    padding: var(--#{$prefix}dropdown-padding-y) var(--#{$prefix}dropdown-padding-x);
    margin: 0; // Override default margin of ul
    @include font-size(var(--#{$prefix}dropdown-font-size));
    color: var(--#{$prefix}dropdown-color);
    text-align: left; // Ensures proper alignment if parent has it changed (e.g., modal footer)
    list-style: none;
    background-color: var(--#{$prefix}dropdown-bg);
    background-clip: padding-box;
    border: var(--#{$prefix}dropdown-border-width) solid var(--#{$prefix}dropdown-border-color);
    @include border-radius(var(--#{$prefix}dropdown-border-radius));
    box-shadow: var(--#{$prefix}dropdown-box-shadow);
    @include transition(var(--#{$prefix}dropdown-transition));
    transition-duration: var(--#{$prefix}dropdown-transition-duration);

    @if $dropdown-padding-y ==0 {

        > .dropdown-item:first-child,
        > li:first-child .dropdown-item {
            @include border-top-radius(var(--#{$prefix}dropdown-inner-border-radius));
        }

        > .dropdown-item:last-child,
        > li:last-child .dropdown-item {
            @include border-bottom-radius(var(--#{$prefix}dropdown-inner-border-radius));
        }
    }

    &[popover] {
        position: fixed;

        &:popover-open {
            display: block;
        }
    }
}

// Dividers (basically an `<hr>`) within the dropdown
.dropdown-divider {
    height: 0;
    margin: var(--#{$prefix}dropdown-divider-margin-y) var(--#{$prefix}dropdown-divider-margin-x);
    overflow: hidden;
    border-top: 1px solid var(--#{$prefix}dropdown-divider-bg);
    opacity: 1; // Revisit in v6 to de-dupe styles that conflict with <hr> element
}

// Links, buttons, and more within the dropdown menu
//
// `<button>`-specific styles are denoted with `// For <button>s`
.dropdown-item {
    display: flex;
    align-items: center;
    min-height: 48px;
    width: 100%; // For `<button>`s
    padding: var(--#{$prefix}dropdown-item-padding-y) var(--#{$prefix}dropdown-item-padding-x);
    gap: $dropdown-item-padding-x;
    font-weight: $font-weight-normal;
    color: var(--#{$prefix}dropdown-link-color);
    text-align: inherit; // For `<button>`s
    text-decoration: none;
    white-space: nowrap; // prevent links from randomly breaking onto new lines
    background-color: transparent; // For `<button>`s
    border: 0; // For `<button>`s
    @include border-radius(var(--#{$prefix}dropdown-item-border-radius, 0));

    &:hover {
        color: var(--#{$prefix}dropdown-link-hover-color);
        background-image: var(--#{$prefix}hover-layer-cc);
    }

    &.active,
    &:active,
    &:focus {
        color: var(--#{$prefix}dropdown-link-active-color);
        background-image: var(--#{$prefix}focus-layer-cc);
        box-shadow: none;
    }

    &:focus-visible {
        outline: var(--#{$prefix}focus-ring);
        outline-offset: -3px;
    }

    &.disabled,
    &:disabled {
        color: var(--#{$prefix}dropdown-link-disabled-color);
        pointer-events: none;
        background-color: transparent;
    }

    & > :is(svg, img) {
        font-size: 24px;
    }

    &:not(:disabled, .disabled) > :is(svg, img) {
        color: $on-surface-variant-color;
    }

    & > :where(span, p):first-of-type {
        overflow: hidden;
        white-space: nowrap;
        text-overflow: ellipsis;
    }
}

// Dropdown section headers
.dropdown-header {
    display: block;
    padding: var(--#{$prefix}dropdown-header-padding-y) var(--#{$prefix}dropdown-header-padding-x);
    margin-bottom: 0; // for use with heading elements
    @include font-size($font-size-sm);
    color: var(--#{$prefix}dropdown-header-color);
    white-space: nowrap; // as with > li > a
}

// Dropdown text
.dropdown-item-text {
    display: block;
    padding: var(--#{$prefix}dropdown-item-padding-y) var(--#{$prefix}dropdown-item-padding-x);
    color: var(--#{$prefix}dropdown-link-color);
}

.dropdown-menu.fade {
    --#{$prefix}dropdown-transition: opacity linear, display allow-discrete, overlay allow-discrete;
    opacity: 0;

    &[popover]:popover-open {
        opacity: 1;

        @starting-style {
            opacity: 0;
        }
    }
}

$main-placements: left right top bottom;
$alt-placements: start end center;
$placements: [];

@each $main in $main-placements {
    $placements: append($placements, #{$main});

    @each $alt in $alt-placements {
        $placements: append($placements, #{$main}-#{$alt});
    }
}

$placements: join($placements, [auto fixed]);
$placement-syntax: "";

@for $i from 1 to length($placements) + 1 {
    $placement-syntax: $placement-syntax + if($i !=1, " | ", "") + nth($placements, $i);
}

@property --#{$prefix}placement {
    syntax: "#{$placement-syntax}";
    inherits: true;
    initial-value: auto;
}

@each $placement in [left left-center bottom top-center] {
    .drop-#{$placement} {
        --#{$prefix}placement: #{$placement};
    }
}

@mixin action-sheet {
    --#{$prefix}placement: fixed;
    --#{$prefix}dropdown-bg: #{$surface-container-low-color};
    --#{$prefix}dropdown-border-width: 0;
    --#{$prefix}dropdown-box-shadow: var(--#{$prefix}shadow-l1);
    --#{$prefix}dropdown-divider-margin-x: #{$dropdown-item-padding-x};
    --#{$prefix}dropdown-min-width: unset;
    --#{$prefix}dropdown-max-width: 640px;

    position: fixed;
    inset: auto 0 0 0;
    width: auto;
    height: auto;
    max-height: 50dvh;
    padding-top: 0;
    margin-inline: auto;
    border-radius: $corner-xl $corner-xl 0 0;
    border-top: 48px solid transparent;
    background: border-box var(--#{$prefix}dropdown-bg) center top 16px no-repeat var(--#{$prefix}drag-handle-icon);
    overscroll-behavior: contain;

    &.slide {
        --#{$prefix}dropdown-slide-translate: 0 100% 0;
        --#{$prefix}dropdown-transition: translate var(--#{$animation-prefix}ease-out-circ),
        display allow-discrete,
        overlay allow-discrete;
        translate: var(--#{$prefix}dropdown-slide-translate);

        &[popover]:popover-open {
            translate: none;

            @starting-style {
                translate: var(--#{$prefix}dropdown-slide-translate);
            }
        }
    }

    &.slide.fade {
        --#{$prefix}dropdown-transition: translate var(--#{$animation-prefix}ease-out-circ),
        opacity linear,
        display allow-discrete,
        overlay allow-discrete;
    }

    &[popover] {
        &::backdrop {
            opacity: 0;
            background-color: var(--#{$prefix}backdrop-bg-color);
            @include transition(opacity linear, display allow-discrete, overlay allow-discrete);
            transition-duration: var(--#{$prefix}backdrop-transition-duration);
        }

        &:popover-open {
            &::backdrop {
                opacity: 1;

                @starting-style {
                    opacity: 0;
                }
            }
        }
    }
}

$action-sheet-breakpoints: sm;

@each $breakpoint in $action-sheet-breakpoints {
    @if $breakpoint ==null {
        .action-sheet {
            @include action-sheet;
        }
    }

    @else {
        $width: map-get($grid-breakpoints, $breakpoint);

        @media (width < #{$width}) {
            .action-sheet-#{$breakpoint} {
                @include action-sheet;
            }
        }
    }
}