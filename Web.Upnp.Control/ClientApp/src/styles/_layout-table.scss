$auto-table-striped-order: even;

$trim-columns-map: (
    sm: 3,
);

$hide-columns-map: (
    md: (
        3,
        5,
    ),
    lg: 5,
);

.auto-table {
    --bs-auto-table-bg: #{$table-bg};
    --bs-auto-table-header-bg: #{$light};
    --bs-auto-table-accent-bg: transparent;
    --bs-auto-table-striped-color: #{$table-striped-color};
    --bs-auto-table-striped-bg: #{$table-striped-bg};
    --bs-auto-table-active-color: #{$table-active-color};
    --bs-auto-table-active-bg: #{$table-active-bg};
    --bs-auto-table-hover-color: #{$table-hover-color};
    --bs-auto-table-hover-bg: #{$table-hover-bg};
    --bs-auto-table-selected-bg: #{$link-color};
    --bs-auto-table-focused-marker-color: #{shade-color($link-color, 35%)};
    --bs-auto-table-focused-marker-size: 0rem;
    --bs-auto-table-selected-color: white;

    display: table;
    width: 100%;
    max-width: 100%;
    margin-bottom: $spacer;
    background-color: $table-bg;
    color: $table-color;
    vertical-align: $table-cell-vertical-align;
    border-color: $table-border-color;

    & > div {
        display: table-row-group;

        /* Table caption */
        &.table-caption:first-of-type {
            display: table-caption;
            color: $table-caption-color;
            padding: $table-cell-padding-y $table-cell-padding-x;
            caption-side: top;
            border: none;
        }

        /* Table header */
        &:not(.table-caption):first-of-type,
        &.table-caption:first-of-type + div {
            display: table-header-group;

            & > div {
                & > div {
                    :first-child {
                        border-left: none;
                    }

                    color: $table-color;
                    background-color: var(--bs-auto-table-header-bg);
                    border-top: $table-border-width solid $table-border-color;
                    border-bottom: $table-border-width solid $table-border-color;
                    border-left: $table-border-width solid $table-border-color;
                    font-weight: $headings-font-weight;
                }
            }

            &.sticky-header > div > div {
                position: sticky;
                top: 0;
                z-index: $zindex-sticky;
            }
        }

        /* Table row */
        &:not(.table-caption) > div {
            display: table-row;
            background-color: var(--bs-auto-table-bg);
            background-image: linear-gradient(var(--bs-auto-table-accent-bg), var(--bs-auto-table-accent-bg));

            &[data-active="true"],
            &.active {
                --bs-auto-table-accent-bg: var(--bs-auto-table-active-bg) !important;
                color: var(--bs-auto-table-active-color);
            }

            &[data-selected="true"],
            &.selected,
            &[data-focused="true"],
            &.focused,
            &:focus,
            &:focus-within {
                --bs-auto-table-accent-bg: var(--bs-auto-table-selected-bg) !important;
                color: var(--bs-auto-table-selected-color) !important;
                outline: none;
            }

            & > div {
                display: table-cell;
                vertical-align: middle;
                white-space: nowrap;
                padding: $table-cell-padding-y $table-cell-padding-x;
                border-top: $table-border-width solid $table-border-color;

                &.mw-1 {
                    max-width: 1px;
                }
            }

            &:first-child > div {
                border-top: none;
            }

            & > div:first-child {
                padding-left: calc(#{2 * $table-cell-padding-x} + var(--bs-auto-table-focused-marker-size));
            }

            & > div:last-child {
                padding-right: 2 * $table-cell-padding-x;
            }
        }

        &.table-footer:last-of-type {
            display: table-footer-group;
        }
    }

    &.table-compact {
        & > div {
            & > div {
                & > div {
                    padding: $table-cell-padding-y-sm $table-cell-padding-x-sm;
                }

                & > div:first-child {
                    padding-left: calc(#{2 * $table-cell-padding-x-sm} + var(--bs-auto-table-focused-marker-size));
                }

                & > div:last-child {
                    padding-right: 2 * $table-cell-padding-x-sm;
                }
            }
        }
    }

    &.table-striped {
        & > div.table-caption:first-of-type ~ :nth-of-type(3),
        & > div:not(.table-caption):first-of-type ~ :nth-of-type(2) {
            & > :nth-of-type(#{$auto-table-striped-order}) {
                --bs-auto-table-accent-bg: var(--bs-auto-table-striped-bg);
                color: var(--bs-auto-table-striped-color);
            }
        }
    }

    &.table-focus-marker {
        --bs-auto-table-focused-marker-size: #{map-get($spacers, 1)};

        & > div.table-caption:first-of-type ~ :nth-of-type(3),
        & > div:not(.table-caption):first-of-type ~ :nth-of-type(2) {
            & > div {
                &[data-focused="true"] > div:first-child,
                &:focus > div:first-child,
                &:focus-within > div:first-child {
                    box-shadow: inset var(--bs-auto-table-focused-marker-size) 0 0
                        var(--bs-auto-table-focused-marker-color);
                }
            }
        }
    }

    &.table-hover {
        & > div.table-caption:first-of-type ~ :nth-of-type(3),
        & > div:not(.table-caption):first-of-type ~ :nth-of-type(2) {
            & > :hover {
                --bs-auto-table-accent-bg: var(--bs-auto-table-hover-bg);
                color: var(--bs-auto-table-hover-color);
            }
        }
    }

    &.table-hover-link {
        & > div.table-caption:first-of-type ~ :nth-of-type(3),
        & > div:not(.table-caption):first-of-type ~ :nth-of-type(2) {
            & > :hover {
                --bs-auto-table-accent-bg: var(--bs-auto-table-hover-bg);
                color: $link-hover-color;
                text-decoration: none;
                cursor: default;
            }
        }
    }

    @each $breakpoint, $indices in $trim-columns-map {
        @include media-breakpoint-down($breakpoint) {
            @each $i in $indices {
                &.trim#{breakpoint-infix($breakpoint)}-#{$i} > div:not(.table-caption) > div > div {
                    @include display-no-children-since($i);
                }
            }
        }
    }

    @each $breakpoint, $indices in $hide-columns-map {
        @include media-breakpoint-down($breakpoint) {
            @each $i in $indices {
                &.hide#{breakpoint-infix($breakpoint)}-#{$i} > div:not(.table-caption) > div > div {
                    @include display-no-child($i);
                }
            }
        }
    }
}
