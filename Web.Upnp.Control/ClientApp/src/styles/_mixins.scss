@function infix($name) {
    @return if(($name == null) or ($name == ""), "", "-#{$name}");
}

@mixin unify-parent($child) {
    @at-root #{selector-unify(&, $child)} {
        @content;
    }
}

// Media of at least the minimum breakpoint height. No query for the smallest breakpoint.
// Makes the @content apply to the given breakpoint and taller.
@mixin media-breakpoint-height-up($name, $breakpoints: $grid-breakpoints) {
    $min: breakpoint-min($name, $breakpoints);
    @if $min {
        @media (min-height: $min) {
            @content;
        }
    } @else {
        @content;
    }
}

// Media of at most the maximum breakpoint height. No query for the largest breakpoint.
// Makes the @content apply to the given breakpoint and smaller.
@mixin media-breakpoint-height-down($name, $breakpoints: $grid-breakpoints) {
    $max: breakpoint-max($name, $breakpoints);
    @if $max {
        @media (max-height: $max) {
            @content;
        }
    } @else {
        @content;
    }
}

@mixin font-scale($scale) {
    font-size: $scale * 1em;
}

$missing-image-content: "\1F61F" !default;

@mixin image-box {
    position: relative;
    text-align: center;
    vertical-align: middle !important;
    object-fit: contain;
    // This renders in case of image download error
    &:after {
        content: $missing-image-content;
        display: flex;
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        color: $orange;
        justify-content: center;
        align-items: center;
        outline: 1px dashed $orange;
        outline-offset: -1px;
        background-color: $orange-100;
    }
}

@mixin image-box-sized($width, $height) {
    width: $width;
    min-width: $width;
    height: $height;
    min-height: $height;
    line-height: $height;
}

@mixin overlay {
    position: absolute;
    z-index: $zindex-modal;
    width: 100%;
    height: 100%;
}

%no-decoration {
    border: none;
    outline: none !important;
    @include border-radius(0);
    @include box-shadow(none);
}

@mixin bg-translucent($color: #000000, $alpha: 0.25) {
    background-color: rgba($color, $alpha);
}